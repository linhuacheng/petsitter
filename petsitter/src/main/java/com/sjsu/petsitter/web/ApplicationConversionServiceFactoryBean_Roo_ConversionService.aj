// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.sjsu.petsitter.web;

import com.sjsu.petsitter.domain.Address;
import com.sjsu.petsitter.domain.User;
import com.sjsu.petsitter.service.AddressService;
import com.sjsu.petsitter.service.UserService;
import com.sjsu.petsitter.web.ApplicationConversionServiceFactoryBean;
import java.math.BigInteger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    @Autowired
    AddressService ApplicationConversionServiceFactoryBean.addressService;
    
    @Autowired
    UserService ApplicationConversionServiceFactoryBean.userService;
    
    public Converter<Address, String> ApplicationConversionServiceFactoryBean.getAddressToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.sjsu.petsitter.domain.Address, java.lang.String>() {
            public String convert(Address address) {
                return new StringBuilder().append(address.getLine1()).append(" ").append(address.getLine2()).append(" ").append(address.getCity()).append(" ").append(address.getZipCode()).toString();
            }
        };
    }
    
    public Converter<BigInteger, Address> ApplicationConversionServiceFactoryBean.getIdToAddressConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.sjsu.petsitter.domain.Address>() {
            public com.sjsu.petsitter.domain.Address convert(java.math.BigInteger id) {
                return addressService.findAddress(id);
            }
        };
    }
    
    public Converter<String, Address> ApplicationConversionServiceFactoryBean.getStringToAddressConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.sjsu.petsitter.domain.Address>() {
            public com.sjsu.petsitter.domain.Address convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), Address.class);
            }
        };
    }
    
    public Converter<User, String> ApplicationConversionServiceFactoryBean.getUserToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.sjsu.petsitter.domain.User, java.lang.String>() {
            public String convert(User user) {
                return new StringBuilder().append(user.getUserName()).append(" ").append(user.getFirstName()).append(" ").append(user.getLastName()).append(" ").append(user.getEmail()).toString();
            }
        };
    }
    
    public Converter<BigInteger, User> ApplicationConversionServiceFactoryBean.getIdToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.math.BigInteger, com.sjsu.petsitter.domain.User>() {
            public com.sjsu.petsitter.domain.User convert(java.math.BigInteger id) {
                return userService.findUser(id);
            }
        };
    }
    
    public Converter<String, User> ApplicationConversionServiceFactoryBean.getStringToUserConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.sjsu.petsitter.domain.User>() {
            public com.sjsu.petsitter.domain.User convert(String id) {
                return getObject().convert(getObject().convert(id, BigInteger.class), User.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getAddressToStringConverter());
        registry.addConverter(getIdToAddressConverter());
        registry.addConverter(getStringToAddressConverter());
        registry.addConverter(getUserToStringConverter());
        registry.addConverter(getIdToUserConverter());
        registry.addConverter(getStringToUserConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
